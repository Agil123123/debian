#!/bin/bash

# Copyright (C) 2011-2014  Stefano Zacchiroli <zack@upsilon.cc>
#
# This file is part of Debsources.
#
# Debsources is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Iterate a given command in each unpacked source package dir
#
# Usage:   debsources-foreach CONFFILE COMMAND...
# Example: debsources-foreach /srv/debsources/etc/config.local.ini \
#                             'echo $DEBSOURCES_PACKAGE/$DEBSOURCES_VERSION'

die_usage() {
    if [ -n "$1" ] ; then
	echo "Error: $1"
    fi
    echo "Usage: debsources-foreach CONFFILE COMMAND..."
    exit 2
}

if ! [ -f "$1" ] ; then
    die_usage "cannot find configuration file: $1"
fi
conffile="$1"
shift 1

# minimal interpolation support, for the few configuration values needed
# by the update driver
root_dir=$(grep "^root_dir:" "$conffile" | awk '{ print $2 }')
conf_get () {
    local key="$1"
    local value=$(grep "^${key}:" "$conffile" | head -n 1 | awk '{ print $2 }')
    value=$(echo $value | sed "s|%(root_dir)s|${root_dir}|")
    if [ -z "$value" ] ; then
	err "required configuration value $key not found in $conffile, abort."
    fi
    echo "$value"
}
cache_dir=$( conf_get "cache_dir" )
mirror_dir=$( conf_get "mirror_dir" )
sources_dir=$( conf_get "sources_dir" )
srclist="${cache_dir}/sources.txt"

if ! [ -d "$mirror_dir" ] ; then
    die_usage "cannot find mirror dir: ${mirror_dir}"
fi
if ! [ -d "$sources_dir" ] ; then
    die_usage "cannot find sources dir: ${sources_dir}"
fi
if ! [ -f "$srclist" ] ; then
    die_usage "cannot find sources.txt cache: ${srclist}"
fi

cat $srclist | \
while read package version area dsc dir suites ; do
    dsc="${mirror_dir}/${dsc}"
    dir="${sources_dir}/${dir}"
    if ! [ -d "$dir" ] ; then
	echo "W: directory for ${package}/${version} does not exist, skipping."
    else
	(cd "$dir" && \
	    export DEBSOURCES_PACKAGE="$package" && \
	    export DEBSOURCES_VERSION="$version" && \
	    export DEBSOURCES_AREA="$area" &&
	    export DEBSOURCES_DSC="$dsc" &&
	    export DEBSOURCES_DIR="$dir" &&
	    export DEBSOURCES_SUITES="$suites" &&
	    eval "$@")
    fi
done
