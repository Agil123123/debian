#!/usr/bin/env python3

# Copyright (C) 2013-2021  The Debsources developers
# <qa-debsources@lists.alioth.debian.org>.
# See the AUTHORS file at the top-level directory of this distribution and at
# https://salsa.debian.org/qa/debsources/blob/master/AUTHORS
#
# This file is part of Debsources. Debsources is free software: you can
# redistribute it and/or modify it under the terms of the GNU Affero General
# Public License as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.  For more information
# see the COPYING file at the top-level directory of this distribution and at
# https://salsa.debian.org/qa/debsources/blob/master/COPYING


import argparse
import logging
import sys

import sqlalchemy

from debsources import mainlib, updater


def main():
    cmdline = argparse.ArgumentParser(description="Debsources updater")
    mainlib.add_arguments(cmdline)
    args = cmdline.parse_args()

    conf = mainlib.load_conf(args.conffile or mainlib.guess_conffile())
    mainlib.override_conf(conf, args)
    mainlib.init_logging(conf, mainlib.log_level_of_verbosity(args.verbose))
    logging.debug("loaded configuration from %s" % conf["conffile"])
    conf["observers"], conf["file_exts"] = mainlib.load_hooks(conf)
    mainlib.conf_warnings(conf)

    try:
        db = sqlalchemy.create_engine(conf["db_uri"], echo=args.verbose >= 4)
        Session = sqlalchemy.orm.sessionmaker()
        if conf["single_transaction"]:
            session = Session(bind=db, autocommit=False)
            updater.update(conf, session, stages=conf["stages"])
            session.commit()
        else:
            session = Session(bind=db, autocommit=True)
            updater.update(conf, session, stages=conf["stages"])
    except SystemExit:  # exit as requested
        raise
    except Exception:  # store trace in log, then exit
        logging.exception("unhandled exception. Abort")
        sys.exit(2)
    finally:
        session.close()


if __name__ == "__main__":
    main()
