#!/bin/bash

# Copyright (C) 2011-2013  Stefano Zacchiroli <zack@upsilon.cc>
#
# This file is part of Debsources.
#
# Debsources is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Garbage collection: get rid of source packages that are no longer referenced
# from the local mirror
#
# Options:
#     -q/--quiet    suppress all (non-error) output

root="/srv/debsources"
source "$root/etc/config.sh"
source "$root/bin/lib.sh"

if [ "$1" = "-q" -o "$1" = "--quiet" ] ; then
    shift
    verbose="0"
fi
srclist="$1"
if [ -z "$srclist" -o ! -f "$srclist" ] ; then
    err "Usage: extract-all SOURCES_LIST" 3
fi

garbage_collect() {
    stats_init "gc" ""
    # ASSUMPTION: pool structure $root/sources/{main,contrib,non-free,...}/HASH/PACKAGE
    # e.g. /srv/debsources/sources/main/d/dotclear
    #      /srv/debsources/sources/main/libg/libglade2
    find "$sources_dir" -mindepth 3 -maxdepth 3 -type d | \
    while read pkgdir ; do
	stats_tick
	local pkg=$(basename "$pkgdir")
	if ! grep -q "^${pkg}[[:blank:]]" "$srclist" ; then
	    # completely remove disappeared package
	    info "gc: rm ${pkg}"
	    if [ "$dry_run" != "yes" ] ; then
		rm -rf "$pkgdir"
	    fi
	else
	    find "$pkgdir" -mindepth 1 -maxdepth 1 -type d | \
	    while read versiondir ; do
		local version=$(basename "$versiondir")
		if ! grep -q "^${pkg}[[:blank:]]${version}" "$srclist" ; then
		    info "gc: rm ${pkg} ${version}"
		    if [ "$dry_run" != "yes" ] ; then
			rm -rf "$versiondir" "${versiondir}.log" "${versiondir}.done"
		    fi
		fi
	    done
	fi
    done
}

garbage_collect

info "gc: done."
