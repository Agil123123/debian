#!/bin/bash

# Copyright (C) 2011-2013  Stefano Zacchiroli <zack@upsilon.cc>
#
# This file is part of Debsources.
#
# Debsources is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Garbage collection: get rid of source packages that are no longer referenced
# from the local mirror
#
# Options:
#     -q/--quiet    suppress all (non-error) output

set -e

source "/srv/debsources/etc/config.sh"
source "${bindir}/lib.sh"

if [ "$1" = "-q" -o "$1" = "--quiet" ] ; then
    shift
    verbose="0"
fi
srclist="$1"
if [ -z "$srclist" -o ! -f "$srclist" ] ; then
    err "Usage: extract-all SOURCES_LIST" 3
fi

garbage_collect() {
    # ASSUMPTION: pool structure $root/sources/{main,contrib,non-free,...}/HASH/PACKAGE
    # e.g. /srv/debsources/sources/main/d/dotclear
    #      /srv/debsources/sources/main/libg/libglade2
    list_tmp=$(mktemp --tmpdir debsources.XXXXXXXXXX)
    trap "rm -f $list_tmp" EXIT
    find "$sources_dir" -mindepth 4 -maxdepth 4 -type d > $list_tmp
    local list_len=$(wc -l $list_tmp | cut -f 1 -d' ')

    stats_init "gc" "$list_len"
    cat $list_tmp | \
    while read versiondir ; do
	stats_tick
	package=$(basename $(dirname $versiondir))
	version=$(basename $versiondir)
	if ! grep -q "^${package}[[:blank:]]${version}[[:blank:]]" "$srclist" ; then
	    info "gc: rm ${package} ${version}"
	    if [ "$dry_run" != "yes" ] ; then
		if ! ${bindir}/visit-package rm-package "$versiondir" "$package" "$version" ; then
		    warn "failed to visit ${package}/${version}"
		    continue
		fi
		if ! rm -rf "$versiondir" "${versiondir}.log" ; then
		    warn "failed to remove ${package}/${version}"
		    continue
		fi
		rmdir -p $(dirname $versiondir) 2> /dev/null || true
		rm -f "${versiondir}.done"
	    fi
	fi
    done
}

garbage_collect

info "gc: done."
