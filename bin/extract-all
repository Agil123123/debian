#!/bin/bash

# Main script: extract all (new/unextracted) sources
#
# Options:
#     -q/--quiet    suppress all (non-error) output

root="/srv/debsources"
source "$root/etc/config.sh"
source "$root/bin/lib.sh"

heartbeat_period=1000

if [ "$1" = "-q" -o "$1" = "--quiet" ] ; then
    shift
    verbose="0"
fi

sources_list=$(mktemp --tmpdir debsources.XXXXXXXXXX)
trap "rm -f $sources_list" EXIT

info "listing source packages..."
if ! $bindir/list-sources --all > $sources_list ; then
    err "cannot list available sources. Abort." 2
fi

total=$(wc -l $sources_list | cut -f 1 -d' ')

init_stats() {
    pkgcount=0
}

print_stats() {
    local label="$1"
    if [ "$verbose" = "1" ] ; then
        # used=$(du -sh | cut -f 1)
        # free=$(df -h . | tail -n 1 | awk '{print $3}')
        # echo "$pkgcount / $total (used/free: $used / $free)"
        echo "$label heartbeat: $pkgcount / $total"
    fi
}

garbage_collect() {
    init_stats
    info "garbage collection of old packages/versions..."
    # ASSUMPTION: pool structure $root/sources/{main,contrib,non-free,...}/HASH/PACKAGE
    # e.g. /srv/debsources/sources/main/d/dotclear
    #      /srv/debsources/sources/main/libg/libglade2
    find "$sources_dir" -mindepth 3 -maxdepth 3 -type d | \
    while read pkgdir ; do
	pkgcount=$[$pkgcount+1]
	if [ $[$pkgcount % $heartbeat_period] -eq 0 ] ; then
            # XXX BUG: total is not accurate for GC stats
            print_stats "gc"
	fi
	local pkg=$(basename "$pkgdir")
	if ! grep -q "^${pkg}[[:blank:]]" "$sources_list" ; then
	    # completely remove disappeared package
	    info "GC: rm ${pkg}"
	    if [ "$dry_run" != "yes" ] ; then
		rm -rf "$pkgdir"
	    fi
	else
	    find "$pkgdir" -mindepth 1 -maxdepth 1 -type d | \
	    while read versiondir ; do
		local version=$(basename "$versiondir")
		if ! grep -q "^${pkg}[[:blank:]]${version}" "$sources_list" ; then
		    info "GC: rm ${pkg} ${version}"
		    if [ "$dry_run" != "yes" ] ; then
			rm -rf "$versiondir"
		    fi
		fi
	    done
	fi
    done
}

init_stats
cat $sources_list | \
while read package version dsc dest ; do
    pkgcount=$[$pkgcount+1]
    if [ $[$pkgcount % $heartbeat_period] -eq 0 ] ; then
        print_stats "extraction"
    fi
    flags=""
    if [ "$verbose" = "0" ] ; then
        flags="$flags --quiet"
    fi
    if ! $bindir/extract-source $flags "$package" "$version" "$dsc" "$dest" ; then
	warn "failed to extract package '$package' '$version'"
    fi
done

garbage_collect

info "extract-all: done."
