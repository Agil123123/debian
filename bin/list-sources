#!/bin/bash

# List <package, version, .dsc, dest> pairs found in a given Debian (source) mirror.
#
# Output format: "PACKAGE\tVERSION\tDSC\tDEST\n"
#
# By default, only list the triple corresponding to the most recent package,
# according to the version. Pass --all to list all entries.

# Depends: dctrl-tools

root="/srv/debsources"
source "$root/etc/config.sh"
source "$root/bin/lib.sh"

list_all="no"

if [ "$1" = "-a" -o "$1" = "--all" ] ; then
    shift
    list_all="yes"
fi

parse_dsc() {
    files_done="no"
    dsc="NONE"
    while [ "$files_done" = "no" ] ; do
        read hash size file        # line(s) "40bf5c1792a2a2555f2fc6edd2314005 1085 hello_1.2-3.dsc
        if [ -z "$hash" ] ; then   # line "\n"
            files_done="yes"
        elif [ "${file: -3:3}" = "dsc" ] ; then
            dsc="$mirror_dir/$directory/$file"
        fi
    done
}

emit() {
    echo -e "$package\\t$version\\t$dsc\\t$dest"
}

# find "$mirror_dir/dists/unstable/contrib" -type f -name Sources.gz |

src_indexes=$(find "$mirror_dir/dists/" -type f -name Sources.gz)

zcat $src_indexes | \
sort-dctrl -k Package,Version:vr | \
grep-dctrl -s Package,Version,Directory,Files '' - | \
{
    prev_package=""
    prev_version=""
    while read _key package ; do   # line "Package: foo\n"
        read _key version          # line "Version: 1.2-3\n"
        read _key directory        # line "Directory: pool/main/h/hello\n"
        read _key                  # line "Files:\n"
        parse_dsc
        dest="$sources_dir/${directory#*/}/$version"
	if [ "$package" != "$prev_package" ]; then
	    # first of his name, i.e. most recent
	    emit
        elif [ "$list_all" = "yes" -a "$version" != "$prev_version" ] ; then
	    # emit all versions, as requested, but suppress duplicates
	    emit
        fi
        prev_package="$package"
        prev_version="$version"
    done
}

