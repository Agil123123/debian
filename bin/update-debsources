#!/usr/bin/python

# Copyright (C) 2013-2014  Stefano Zacchiroli <zack@upsilon.cc>
#
# This file is part of Debsources.
#
# Debsources is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import logging
import sqlalchemy
import sys

import bininit

from debsources import mainlib
from debsources import updater


def main():
    cmdline = argparse.ArgumentParser(description='Debsources updater')
    mainlib.add_arguments(cmdline)
    args = cmdline.parse_args()

    conf = mainlib.load_conf(args.conffile or bininit.DEFAULT_CONFFILE)
    mainlib.override_conf(conf, args)
    mainlib.init_logging(conf, mainlib.log_level_of_verbosity(args.verbose))
    logging.debug('loaded configuration from %s' % conf['conffile'])
    conf['observers'], conf['file_exts'] = mainlib.load_hooks(conf)
    mainlib.conf_warnings(conf)

    try:
        db = sqlalchemy.create_engine(conf['db_uri'], echo=args.verbose >= 4)
        Session = sqlalchemy.orm.sessionmaker()
        if conf['single_transaction']:
            session = Session(bind=db, autocommit=False)
            updater.update(conf, session, stages=conf['stages'])
            session.commit()
        else:
            session = Session(bind=db, autocommit=True)
            updater.update(conf, session, stage=conf['stages'])
    except SystemExit:  # exit as requested
        raise
    except:  # store trace in log, then exit
        logging.exception('unhandled exception. Abort')
        sys.exit(2)


if __name__ == '__main__':
    main()
