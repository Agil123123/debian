#!/bin/bash

# Depends: apache2-utils (for httxt2dbm)

root="/srv/debsources"
source "$root/etc/config.sh"
source "$root/bin/lib.sh"

export PATH="$PATH:/usr/sbin"	# httxt2dbm (currently) lives in sbin

update_mirror() {
    # update source mirror
    info "update-debsources: updating source mirror..."
    ${root}/bin/debian-source-mirror
}

# result: fill $sources_list_new with a path to new source packages list
list_sources() {
    info "update-debsources: listing available source packages..."

    # note: no risk of race here, thanks to $lockfile
    sources_list_new="${sources_list}.new"
    if ! $bindir/list-sources --all > "${sources_list_new}" ; then
	err "cannot list available source packages. Abort." 2
    fi
    chmod 664 "${sources_list_new}"
    chgrp $gid "${sources_list_new}"
}

extract_sources() {
    # extract all source packages
    local srclist="$1"
    info "update-debsources: extracting source packages..."
    ${root}/bin/extract-all "$srclist"
}

garbage_collect() {
    # extract all source packages
    local srclist="$1"
    info "update-debsources: garbage collection..."
    ${root}/bin/gc "$srclist"
}

update_db() {
    # update maps, indexes, and co.
    local srclist="$1"
    info "update-debsources: update indexes"

    # http redirection maps
    ${root}/bin/srclist2redirmap < "$srclist" > "${sources_map}.new"
    mv "${sources_map}.new" "$sources_map"
    httxt2dbm -i "$sources_map" -o "${sources_dbm}.new"
    chmod 664 "${sources_dbm}.new"
    mv "${sources_dbm}.new" "$sources_dbm"

    # sqlite db
    python ${root}/web/scripts/sources2db.py "${sources_sql}.new" "$srclist"
    chmod 664 "${sources_sql}.new"
    mv "${sources_sql}.new" "$sources_sql"
}

main() {
    info "update-debsources: starting at $(date)"

    if [ -f "$lockfile" ] ; then
	pid=$(head "$lockfile")
	if ! ps "$pid" > /dev/null ; then
	    info "update-debsources: remove stale lockfile for pid '$pid'"
	    rm -f "$lockfile"
	else
	    err "lockfile found. Abort" 2
	fi
    fi
    echo $$ > "$lockfile"

    update_mirror
    list_sources	# fill $sources_list_new
    extract_sources "$sources_list_new"
    mv "$sources_list_new" "$sources_list"
    update_db "$sources_list"
    garbage_collect "$sources_list"

    rm -f "$lockfile"
    info "update-debsources: all done at $(date)"
}

main >> $logfile 2>&1 || echo "update-debsources returned non 0 exit code"
