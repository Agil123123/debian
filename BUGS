#    -*- mode: org -*-

* TODO [#A] [0/4] new stats happy			:web:stats:rrd:infra:
  depends: "suite support"
** TODO programming languages breakdown
** TODO postgres db size
** TODO ctags symbols
** TODO number of {source,binary} packages

* TODO [#A] circular import models -> views -> models		 :bug:python:
  Import models from within python/ should just work. Instead, it fails due to
  the circular import above. Also, models shoudn't depend on views, to allow
  running the updater without flask and other web dependencies. The current
  workaround is as per commit aa087026c414cb91ae7ee596acdc029a8b079130,
  i.e. `from app import views` before `import models`. The plan to fix this is
  to factor out of the webapp a proper config (and session) manager. See branch
  feature/configmanager for the work in progress on this.

* TODO [#B] database schema refactoring				      :model:
  - merge package and version into one table
  - create table File and use foreignkey(file) in CheckSum and Ctags
  - (un)distinguish Source and Binary packages where it is necessary
  - uniform reference to version_id (currently it's sometime version_id,
    other sourceversion_id)

* TODO [#B] file-level deduplication, using checksums		      :infra:
  depends (to be done properly) on "database schema refactoring"

* TODO check-in derivatives from the census		  :infra:derivatives:

* TODO missing test: `/api/checksum/foo/`		      :web:api:tests:

* TODO tarball-in-tarball 					  :infra:web:
  Explode nested tarballs, partly for some packaging habits still present in
  the archive (although they should die a horrible death), more importantly due
  to upstream shipping tarballs.
  
  From #debian-qa:
  > 04:43 < pabs> zack: well apart from tarball-in-tarball some upstreams ship
  >               tarballs/zip files
  > 04:49 < pabs> zack: apt-file counts 2022 .zip files and 6892 .tar* files,
  >               242 .tgz, 22 .tbz* and 7 txz files in source packages
  
** tentative solution
*** web: discriminate on trailing slash
    - /foo/bar/baz.tar.gz     -> download the tarball
    - /foo/bar/baz.tar.gz/qux -> navigate in it
*** infra: not clear
    We need some FS attribute to avoid clashes tar-vs-extraction-dir and
    minimize the risks of collisions. Could be some highly unlikely suffix (but
    then it will need to be excluded via apache navigation from /data/). Or
    some metadata via xattr. Or a separate hierarchy for extracted tarballs.

* TODO popup messages between lines instead of on the right	  :web:popup:
  - rationale #1: popups are invisible for very long source code lines
    e.g.: http://sources.debian.net/src/vim/2:7.3.547-7/runtime/syntax/sicad.vim?hl=133&msg=133%3Atest%3Atest#L133
  - rationale #2: it is the only sane way to show multiple pop-ups avoding
    they clash with one another

* TODO multiple popup messages					  :web:popup:
  to be able to show multiple error( location)s on the same source file

* TODO file name search 					 :web:search:
  depends: "database schema refactoring"

* TODO qualified ctags					 :plugin:ctags:infra:
  Add --extra=+q to ctags invocation. "However, that this could potentially
  more than double the size of the tag file". Bug report by Olly Betts
  on #debian-devel.

* TODO debian cross reference (lxr.debian.net)			  :web:ctags:
  A-la http://lxr.linux.no/ . Suggested by Pierre Habouzit. Main problem is of
  scope, cross-ref is mostly reasonable within the same package; /possibly/
  reasonable between dependent packages; largely unresonable among unrelated
  packages. (Not to mention the risk of cross-referincing across different
  languages; although we should have the info to avoid that...)

* TODO highlight #Lxxx lines by default 			     :web:ui:
  On Thu, Jun 13, 2013 at 12:19:58AM +0200, Joachim Breitner wrote:
  > An URL like
  > http://sources.debian.net/src/cairo/1.12.14-4/boilerplate/cairo-boilerplate-xcb.c#L395
  > should highlight that line. And ideally put it in the middle of the
  > screen, instead of the top (this might require some JS fiddling).

* TODO allow symlink within same package/version	       :web:security:
  currently /all/ symlinks are forbidden for security reasons

* TODO .pc/ exclusion should become a configuration entry      :web:browsing:
  ..in a more general configuration variable in etc/webconfig.py. Similar to
  HIGHLIGHT_CLASSES, although we probably don't need regex for exclusions. See
  http://anonscm.debian.org/gitweb/?p=qa/debsources.git;a=blob;f=web/flask/app/models_app.py;hb=HEAD#l166

* TODO add security archive (?)					      :infra:
  to do so, we need to do a separate debmirror run, as the security archive is
  not hosted on the regular mirror network

* TODO package debsources with python distribute 	      :web:packaging:
  it will simple things like imports and the deployment would be easier

* TODO make web UI parts conditional on plugin enablement	  :infra:web:

* TODO shutter effect					    :web:hilight:css:
  When we highlight a line, we have to use a display:inline tag (whose
  rendering isn't cool, because an highlighted block doesn't have the
  same width verywhere). With a display:blog tag, newlines are added
  by the browser/highlight.js (?), because tags conflicts with
  highlight.js tags (when a hl.js lexem is multiline).
  Try to highlight lines 3-4 of this to see the bug:

  def hello():
     """aaa
     aaa
     """ zzz = 3

  Edit: the browser close tags automatically, and since our tags
  aren't correct (ie
  <span class="string"><div class="highlight">foo</span></div>
  ), closing display:block tags are inserted.

 Debugging: maybe with inline-block and other css tricks

* TODO evaluate the possibility of sources.d.o			  :infra:dsa:

* TODO add binary->source redirection map			  :infra:web:
  Idea: http://sources.d.n/src/FOO -> http://sources.d.n/src/MAP[FOO], as long
  as FOO _does not exists_ as a source package.  Feature suggested in response
  to Selim T. Erdogan, Message-ID: <20130712112459.GA3156@cs.utexas.edu>

* TODO /latest redirection for /data URLs		       :infra:apache:
  [ bug report from Simon Paillard, Message-Id: <20130907214628.GY17455@mraw.org> ]
  to implement this we need to generate batchly redirection maps (as we did in
  the past) and configura Apache to use them, as /data is served directly by
  Apache

* TODO bulk ctags insertion traceback		:ctags:bulk:traceback:ATTACH:
  :PROPERTIES:
  :Attachments: 1.3.1-4.ctags
  :ID:       b9a3371f-6e2d-4e60-82e4-9d7c7543ba86
  :END:
    Traceback (most recent call last):
      File "bin/bulk-insert-ctags", line 94, in <module>
        main(conf, ctagsfile=args.file)
      File "bin/bulk-insert-ctags", line 73, in main
        insert_ctags(conn, ctagsfile)
      File "bin/bulk-insert-ctags", line 65, in insert_ctags
        conn.execute(INSERT_CTAGS_Q, ctags)
      File "/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py", line 1449, in execute
        params)
      File "/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py", line 1584, in _execute_clauseelement
        compiled_sql, distilled_params
      File "/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py", line 1698, in _execute_context
        context)
      File "/usr/lib/python2.7/dist-packages/sqlalchemy/engine/base.py", line 1680, in _execute_context
        context)
      File "/usr/lib/python2.7/dist-packages/sqlalchemy/engine/default.py", line 328, in do_executemany
        cursor.executemany(statement, parameters)
    sqlalchemy.exc.ProgrammingError: (ProgrammingError) can't adapt type 'RowProxy' '\n    INSERT INTO ctags (version_id, tag, path, line, kind, language)\n    VALUES (%(version_id)s, %(tag)s, %(path)s, %(line)s, %(kind)s, %(language)s)\n    ' ({'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'is_absolute', 'path': <psycopg2._psycopg.Binary object at 0x2800248>, 'line': 51}, {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'absolute_or_prefix', 'path': <psycopg2._psycopg.Binary object at 0x2800200>, 'line': 57}, {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'showhelp', 'path': <psycopg2._psycopg.Binary object at 0x2800290>, 'line': 65}, {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'yorn', 'path': <psycopg2._psycopg.Binary object at 0x2800320>, 'line': 202}, {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'nory', 'path': <psycopg2._psycopg.Binary object at 0x2800368>, 'line': 207}, {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'message', 'path': <psycopg2._psycopg.Binary object at 0x28003b0>, 'line': 213}, {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'info', 'path': <psycopg2._psycopg.Binary object at 0x28003f8>, 'line': 214}, {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'warning', 'path': <psycopg2._psycopg.Binary object at 0x2800440>, 'line': 215}  ... displaying 10 of 436 total bound parameter sets ...  {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'duplex', 'path': <psycopg2._psycopg.Binary object at 0x2a11e18>, 'line': 734}, {'kind': 'f', 'language': 'sh', 'version_id': (38474,), 'tag': u'viewps', 'path': <psycopg2._psycopg.Binary object at 0x2a11e60>, 'line': 757})

  test recipe (bulk):
  - find /srv/debsources/sources -mindepth 4 -maxdepth 4 -name '*.ctags > ctags.txt
  - while read f ; do bin/bulk-insert-ctags -c etc/config.batch.ini $f ; done < ctags.txt

  test recipe (single file):
  - bin/bulk-insert-ctags -c etc/config.batch.ini 1.3.1-4.ctags
    (see attachment)

